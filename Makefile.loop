# Makefile.loop
# 
# This file takes the list of molecules and creates nessecary direcories for each
# molecule. It then runs Makefile.run in ech directory to perform the analysis.

include vars.mak

shape := $(call p_shape, $(mol))
radius := $(call p_rad, $(mol))
dist := $(call p_dist, $(mol))
theta := $(call p_theta, $(mol))
crys := $(call p_crys, $(mol))
bound := $(call p_bound, $(mol))

# Temp range for each d
ifdef temp_$(dist)
	temp := $(temp_$(dist))
endif


ifeq ($(shape), Disc)
	save = $(addprefix $(strip $(shape))-,$(temp))
else ifeq ($(shape), Snowman)
	save1 := $(addsuffix $(subst $(space),-,-$(strip $(radius) $(dist) $(crys) $(bound))), $(temp)) 
	save := $(addprefix $(strip $(shape))-, $(save1)) 
	all_temps = $(notdir $(wildcard $(PREFIX)/$(subst $(space),-,$(strip $(shape) * $(radius) $(dist) $(crys) $(bound)))))
else ifeq ($(shape), Trimer)
	save1 := $(addsuffix $(subst $(space),-,-$(strip $(radius) $(dist) $(theta) $(crys) $(bound))), $(temp)) 
	save := $(addprefix $(strip $(shape))-, $(save1))
	all_temps = $(notdir $(wildcard $(PREFIX)/$(subst $(space),-,$(strip $(shape) * $(radius) $(dist) $(theta) $(crys) $(bound)))))
endif

ifneq ($(dimers), )
	temp :=
	save := $(mol)
endif

dirs:=$(addprefix $(PREFIX)/,$(save))
last_t:=$(word 1, $(temp))

OPTIONS = --no-print-directory $(if $(filter $(MAKECMDGOALS), $(PRE)), -j 1)

collate_command = echo $(call t_temp, $1),$$(cat $(PREFIX)/$1/$@ | grep : | cut -d: -f$2 | tr -d ' ' | tr '\n' ',' | rev | cut -c2- | rev ) >> $(PREFIX)/plots/$(mol)-$(basename $@).csv
collate_header = echo "t,"$$(cat $(PREFIX)/$1/$@ | grep : | cut -d: -f1 | tr -d ' ' | tr '\n' ',' | rev | cut -c2- | rev ) > $(PREFIX)/plots/$(mol)-$(basename $@).csv


export

VPATH := .:gnuplot:$(BIN_PATH)

$(PRE): $(save)

clean-collate:$(save)

$(TARGETS): $(save)
	@echo $@

$(PRESENT): $(save)

present: $(save) collate plot | $(PREFIX)/latex
	@$(foreach p, $(to_plot),\
    $(foreach s, $(save), rm -f $(PREFIX)/latex/$(mol)-$p.tex;))
	@$(foreach p, $(to_plot),\
    $(foreach s, $(save), cat $(PREFIX)/$s/my_latex/$p.tex >> $(PREFIX)/latex/$(mol)-$p.tex;))

collate: collate-plot | plots

order.log contact.log: $(save)
	@-rm -f $(PREFIX)/plots/$(mol)-$(basename $@).csv
	@$(call collate_header,$(word 1, $(save)))
	@$(foreach s, $(all_temps), $(call collate_command,$s, 2);)

collate-plot: $(addprefix plot-,$(collate_plots)) $(save)

plot-%: %.plot $(save) order.log contact.log
	@gnuplot -e 'prefix="$(PREFIX)/"; molecule="$(mol)"; term_type="$(term_type)"' $< #&> out.log

%.tex: $(save) | $(PREFIX)/latex
	@$(foreach s, $(save), $(shell cat $s/my_latex/$@ >> $(PREFIX)/latex/$(mol).tex))

$(save): always | $(dirs)
	@$(foreach t, $(temp), $(if $(filter $(call t_temp, $@), $t), $(eval prev_t=$(last_t)), $(eval last_t=$t)))
ifeq ($(SYS_NAME), silica)
ifeq ($(t_dep), false)
	@qsub -N $@-$(d_name) -o pbsout/$@.out single.pbs -vmol=$@,prev_t=$(prev_t),target=$(MAKECMDGOALS),prefix=$(PREFIX)/$@,my_dir=$(my_dir)
else
	@$(MAKE) $(OPTIONS) -C $(PREFIX)/$@ -f $(my_dir)/$(GOAL) $(MAKECMDGOALS) mol=$@ prev_t=$(prev_t)
endif
else
	@$(MAKE) $(OPTIONS) -C $(PREFIX)/$@ -f $(my_dir)/$(GOAL) $(MAKECMDGOALS) mol=$@ prev_t=$(prev_t)
endif

$(dirs):
	@-mkdir $@

plots:
	@-mkdir -p $(PREFIX)/$@

$(PREFIX)/latex:
	@-mkdir -p $@

.PHONY: always
always:
