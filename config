# 


# Path Settings {{{

include system

#my_dir := $(dir $(word $(words $(MAKEFILE_LIST)), $(MAKEFILE_LIST)))
BIN_PATH := $(my_dir)/bin/$(SYS_NAME)
LIB:=$(my_dir)/analysis/lib

# }}}
# Variables {{{

empty=
space=$(empty) $(empty)

GOAL=Makefile.run
LOOP=Makefile.loop

LOG=out.log


# }}}
# Shape functions {{{


reverse = $(if $(wordlist 2,2,$(1)),$(call reverse,$(wordlist 2,$(words $(1)),$(1))) $(firstword $(1)),$(1))

comp_dist = $(shell echo $(1:radius=$2) |bc)

SAVE = $(subst $(space),-,$(strip $(call t_shape, $1) $t $(call t_rad, $1) $(call t_dist, $1) $(call t_theta, $1) $(call t_bound, $1)))

t_shape = $(word 1, $(subst -,$(space),$(1)) )
t_rad = $(word 2, $(subst -,$(space),$(1)) )
t_dist = $(word 3, $(subst -,$(space),$(1)) )
t_theta = $(word 4, $(subst -,$(space),$(1)) )
t_crys = $(word 4, $(subst -,$(space),$(1)) )
t_bound = $(word 5, $(subst -,$(space),$(1)) )



# }}}
# C settings {{{
CC = gcc
CXX = g++
CFLAGS = -O2 -std=c99
CXXFLAGS := -Ofast -stdlib=libc++ -std=gnu++11
LDFLAGS = -lm

ifeq ($(SYS_NAME), unix)
	CXXFLAGS := $(CXXFLAGS) -pthread -Wl,--no-as-needed
endif

MODULES:=$(wildcard $(LIB)/*.cpp)
MODULES:=$(MODULES:.cpp=.o)
MODULES:=$(notdir $(MODULES))
HEADERS:=$(wildcard $(LIB)/*.h)
HEADERS:=$(notdir $(HEADERS))

#}}}
# Lammps settings {{{

LAMMPS_IN=$(my_dir)/lammps_in/in.molecular
EQUIL_IN=$(my_dir)/lammps_in/in.equil
CREATE_IN=$(my_dir)/lammps_in/in.create
CRYS_IN=$(my_dir)/lammps_in/in.crys
BOUNDARY_IN=$(my_dir)/lammps_in/in.boundary

LAMMPS_VARS+=-v fname $(LAMMPS_IN)

ifeq ($(SYS_NAME), mac)
	LAMMPS_PATH=
	LAMMPS=lmp_mac_mpi
	#LAMMPS_FLAGS=-sf gpu -pk gpu 1
else 
    ifeq ($(SYS_NAME), unix)
	    LAMMPS_PATH=/home/malcolm/bin/
	    LAMMPS=lmp_ubuntu
    else
	    LAMMPS_PATH=
	    LAMMPS=lmp_mpi
    endif
endif

LAMMPS_FILES=-v restart $$(restart) -v my_path ./ -v the_path $$(PREFIX) -v molecule $$(molecule) -v mol_settings $$(mol_settings) -v last_restart $$(last_restart)

LAMMPS_THERM_VARS= -v T $$(temp) -v press $$(pressure)

LAMMPS_SYS_VARS=-v steps $$(steps) -v printevery $$(print) -v n_mol $$(n_mol)

LAMMPS_MOL_VARS=-v shape $$(shape) -v atoms $$(atoms) -v radius $$(radius)

LAMMPS_VARS=$(LAMMPS_SYS_VARS) $(LAMMPS_FILES) $(LAMMPS_THERM_VARS) $(LAMMPS_MOL_VARS)

EQUIL_VARS=$(LAMMPS_FILES) $(LAMMPS_THERM_VARS) $(LAMMPS_MOL_VARS) -v steps $(equil_steps) 

CREATE_VARS=$(LAMMPS_FILES) $(LAMMPS_MOL_VARS) -v T $$(prev_t) -v press $$(pressure) -v steps $(equil_steps)

#}}}
# MPI Settings {{{

ifeq ($(SYS_NAME), mac)
	MPI=mpirun -np 8
else 
    ifeq ($(SYS_NAME), silica )
	    MPI_PATH=
	    MPI=mpirun -np 8
    else
	    MPI=mpirun -np 8
    endif
endif

#}}}
# Python settings {{{

PYTHON_FILES=molecule.py files.py
PYLIB:=$(my_dir)/pylib
FILES=files.py
CRYS_FILE=createCells.py
PYTHON=python

#}}}
# Variable Settings {{{

#}}}

# vim:foldmethod=marker:foldlevel=0
